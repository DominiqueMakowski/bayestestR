% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/bayesfactor_models.R
\name{bayesfactor_models}
\alias{bayesfactor_models}
\title{Extract Bayes Factors from fitted models}
\usage{
bayesfactor_models(..., denominator = 1)
}
\arguments{
\item{...}{Fitted models (any models supported by \code{insight]}), all fit on the same data, or a single \code{BFBayesFactor} object (see details).}

\item{denominator}{Either an integer indicating which of the models to use as the denominator,
or a model to use as a denominator. Ignored for \code{BFBayesFactor}.}
}
\value{
a data frame containing the models' formulas (reconstructed fixed and random effects) and their BFs (log) of the supplied models, that prints nicely.
}
\description{
These functions return a simple \code{data.frame} of class \code{bayesfactor_models} that print nicely
that can be passed to \code{???}.
}
\details{
\itemize{
  \item For \code{brmsfit} or \code{stanreg} models, Bayes factors are computed using the \code{bridgesampling} package.
  \itemize{
    \item \code{brmsfit} models must have been fitted with \code{save_all_pars = TRUE}.
    \item \code{stanreg} models must have been fitted with a defined \code{diagnostic_file}.
  }
  \item For \code{BFBayesFactor}, \code{bayesfactor_models} is mostly a wraparoud \code{BayesFactor::extractBF}.
  \item For all other model types (supported by \code{insight]}), BIC approximations are used to cimpute Bayes factors.
}
}
\examples{
\dontrun{
# With lm objects:
lm1 <- lm(Sepal.Length ~ 1, data = iris)
lm2 <- lm(Sepal.Length ~ Species, data = iris)
lm3 <- lm(Sepal.Length ~ Species + Petal.Length, data = iris)
lm4 <- lm(Sepal.Length ~ Species * Petal.Length, data = iris)
bayesfactor_models(lm1,lm2,lm3,lm4,denominator = 1)
bayesfactor_models(lm2,lm3,lm4,denominator = lm1) # same result

# With lmerMod objects:
library(lme4)
lmer1 <- lmer(Sepal.Length ~ Petal.Length + (1|Species), data = iris)
lmer2 <- lmer(Sepal.Length ~ Petal.Length + (Petal.Length|Species), data = iris)
lmer3 <- lmer(Sepal.Length ~ Petal.Length + (Petal.Length|Species) + (1|Petal.Width), data = iris)
bayesfactor_models(lmer1,lmer2,lmer3,denominator = 1)
bayesfactor_models(lmer1,lmer2,lmer3,denominator = lm1) # mix objects fit on the same data

# With BFBayesFactor objects:
library(BayesFactor)
data(puzzles)
BF <- anovaBF(RT ~ shape * color + ID, data = puzzles,
              whichRandom = "ID", progress = FALSE)
BF
bayesfactor_models(BF) # basically the same

# with brmfit objects:
# (note the save_all_pars MUST be set to TRUE in order to work)
library(brms)
brm1 <- brm(Sepal.Length ~ 1, data = iris, save_all_pars = TRUE)
brm2 <- brm(Sepal.Length ~ Species, data = iris, save_all_pars = TRUE)
brm3 <- brm(Sepal.Length ~ Species + Petal.Length, data = iris, save_all_pars = TRUE)

bayesfactor_models(brm1,brm2,brm3,denominator = 1)
}

}
\references{
Wagenmakers, E. J. (2007). A practical
solution to the pervasive problems of p values. Psychonomic
bulletin & review, 14(5), 779-804.
}
\seealso{
update.BFGrid
}
\author{
Mattan S. Ben-Shachar
}

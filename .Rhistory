df$sig_05 <- factor(ifelse(df$p_frequentist >= .05, "n.s.", "*"), levels=c("n.s.", "*"))
df$sig_01 <- factor(ifelse(df$p_frequentist >= .01, "n.s.", "**"), levels=c("n.s.", "**"))
df$sig_001 <- factor(ifelse(df$p_frequentist >= .001, "n.s.", "***"), levels=c("n.s.", "***"))
get_data <- function(predictor, outcome, lbound=0, ubound=0.3){
fit <- glm(paste(outcome, "~", predictor), data=df, family = "binomial")
data <- data.frame(x=1:100)
data[predictor] <- seq(lbound, ubound, length.out = 100)
data$index <- predictor
predict_fit <- predict(fit, newdata=data, type="response", se.fit = TRUE)
data[outcome] <- predict_fit$fit
data$CI_lower <- predict_fit$fit - (qnorm(0.95) * predict_fit$se.fit)
data$CI_upper <- predict_fit$fit + (qnorm(0.95) * predict_fit$se.fit)
data <- select_(data, "value"=predictor, outcome, "index", "CI_lower", "CI_upper")
return(data)
}
rbind(
get_data(predictor="p_map", outcome="sig_1", lbound=0, ubound=0.5),
get_data(predictor="p_direction", outcome="sig_1", lbound=90, ubound=100),
get_data(predictor="rope", outcome="sig_1", lbound=0, ubound=20),
get_data(predictor="rope_full", outcome="sig_1", lbound=0, ubound=20),
get_data(predictor="p_rope", outcome="sig_1", lbound=0, ubound=100)
) %>%
rbind(
get_data(predictor="p_map", outcome="sig_05", lbound=0, ubound=0.3),
get_data(predictor="p_direction", outcome="sig_05", lbound=95, ubound=100),
get_data(predictor="rope", outcome="sig_05", lbound=0, ubound=10),
get_data(predictor="rope_full", outcome="sig_05", lbound=0, ubound=10),
get_data(predictor="p_rope", outcome="sig_05", lbound=70, ubound=100)
)
rbind(
get_data(predictor="p_map", outcome="sig_1", lbound=0, ubound=0.5),
get_data(predictor="p_direction", outcome="sig_1", lbound=90, ubound=100),
get_data(predictor="rope", outcome="sig_1", lbound=0, ubound=20),
get_data(predictor="rope_full", outcome="sig_1", lbound=0, ubound=20),
get_data(predictor="p_rope", outcome="sig_1", lbound=0, ubound=100)
)
rbind(
get_data(predictor="p_map", outcome="sig_1", lbound=0, ubound=0.5),
get_data(predictor="p_direction", outcome="sig_1", lbound=90, ubound=100),
get_data(predictor="rope", outcome="sig_1", lbound=0, ubound=20),
get_data(predictor="rope_full", outcome="sig_1", lbound=0, ubound=20),
get_data(predictor="p_rope", outcome="sig_1", lbound=0, ubound=100)
) %>%
rename("sig"=sig_1)
rbind(
rbind(
get_data(predictor="p_map", outcome="sig_1", lbound=0, ubound=0.5),
get_data(predictor="p_direction", outcome="sig_1", lbound=90, ubound=100),
get_data(predictor="rope", outcome="sig_1", lbound=0, ubound=20),
get_data(predictor="rope_full", outcome="sig_1", lbound=0, ubound=20),
get_data(predictor="p_rope", outcome="sig_1", lbound=0, ubound=100)
) %>%
rename("sig"=sig_1) %>%
mutate(threshold="p < .1"),
rbind(
get_data(predictor="p_map", outcome="sig_05", lbound=0, ubound=0.3),
get_data(predictor="p_direction", outcome="sig_05", lbound=95, ubound=100),
get_data(predictor="rope", outcome="sig_05", lbound=0, ubound=10),
get_data(predictor="rope_full", outcome="sig_05", lbound=0, ubound=10),
get_data(predictor="p_rope", outcome="sig_05", lbound=70, ubound=100)
) %>%
rename("sig"=sig_05) %>%
mutate(threshold="p < .05"),
rbind(
get_data(predictor="p_map", outcome="sig_01", lbound=0, ubound=0.1),
get_data(predictor="p_direction", outcome="sig_01", lbound=98, ubound=100),
get_data(predictor="rope", outcome="sig_01", lbound=0, ubound=2),
get_data(predictor="rope_full", outcome="sig_01", lbound=0, ubound=2),
get_data(predictor="p_rope", outcome="sig_01", lbound=90, ubound=100)
) %>%
rename("sig"=sig_01) %>%
mutate(threshold="p < .01"),
rbind(
get_data(predictor="p_map", outcome="sig_001", lbound=0, ubound=0.02),
get_data(predictor="p_direction", outcome="sig_001", lbound=99.5, ubound=100),
get_data(predictor="rope", outcome="sig_001", lbound=0, ubound=0.5),
get_data(predictor="rope_full", outcome="sig_001", lbound=0, ubound=0.5),
get_data(predictor="p_rope", outcome="sig_001", lbound=95, ubound=100)
) %>%
rename("sig"=sig_001) %>%
mutate(threshold="p < .001")
) %>%
mutate(index = as.factor(index)) %>%
ggplot(aes(x=value, y=sig)) +
geom_ribbon(aes(ymin=CI_lower, ymax=CI_upper), alpha=0.1) +
geom_line(aes(color=index), size=1) +
facet_grid(~index*threshold, scales = "free") +
theme_classic() +
theme(strip.background = element_blank()) +
scale_color_manual(values = c("p_frequentist"="#607D8B", "p_map" = "#E91E63", "p_direction" = "#2196F3",
"rope" = "#FF9800", "rope_full" = "#FF5722", "p_rope"="#FFC107"), guide=FALSE) +
ylab("Probability of being significant\n") +
xlab("\nIndex Value")
rbind(
rbind(
get_data(predictor="p_map", outcome="sig_1", lbound=0, ubound=0.5),
get_data(predictor="p_direction", outcome="sig_1", lbound=90, ubound=100),
get_data(predictor="rope", outcome="sig_1", lbound=0, ubound=20),
get_data(predictor="rope_full", outcome="sig_1", lbound=0, ubound=20),
get_data(predictor="p_rope", outcome="sig_1", lbound=0, ubound=100)
) %>%
rename("sig"=sig_1) %>%
mutate(threshold="p < .1"),
rbind(
get_data(predictor="p_map", outcome="sig_05", lbound=0, ubound=0.3),
get_data(predictor="p_direction", outcome="sig_05", lbound=95, ubound=100),
get_data(predictor="rope", outcome="sig_05", lbound=0, ubound=10),
get_data(predictor="rope_full", outcome="sig_05", lbound=0, ubound=10),
get_data(predictor="p_rope", outcome="sig_05", lbound=70, ubound=100)
) %>%
rename("sig"=sig_05) %>%
mutate(threshold="p < .05"),
rbind(
get_data(predictor="p_map", outcome="sig_01", lbound=0, ubound=0.1),
get_data(predictor="p_direction", outcome="sig_01", lbound=98, ubound=100),
get_data(predictor="rope", outcome="sig_01", lbound=0, ubound=2),
get_data(predictor="rope_full", outcome="sig_01", lbound=0, ubound=2),
get_data(predictor="p_rope", outcome="sig_01", lbound=90, ubound=100)
) %>%
rename("sig"=sig_01) %>%
mutate(threshold="p < .01"),
rbind(
get_data(predictor="p_map", outcome="sig_001", lbound=0, ubound=0.02),
get_data(predictor="p_direction", outcome="sig_001", lbound=99.5, ubound=100),
get_data(predictor="rope", outcome="sig_001", lbound=0, ubound=0.5),
get_data(predictor="rope_full", outcome="sig_001", lbound=0, ubound=0.5),
get_data(predictor="p_rope", outcome="sig_001", lbound=95, ubound=100)
) %>%
rename("sig"=sig_001) %>%
mutate(threshold="p < .001")
) %>%
mutate(index = as.factor(index)) %>%
ggplot(aes(x=value, y=sig)) +
geom_ribbon(aes(ymin=CI_lower, ymax=CI_upper), alpha=0.1) +
geom_line(aes(color=index), size=1) +
facet_grid(~index*threshold, scales = "free", rows=2) +
theme_classic() +
theme(strip.background = element_blank()) +
scale_color_manual(values = c("p_frequentist"="#607D8B", "p_map" = "#E91E63", "p_direction" = "#2196F3",
"rope" = "#FF9800", "rope_full" = "#FF5722", "p_rope"="#FFC107"), guide=FALSE) +
ylab("Probability of being significant\n") +
xlab("\nIndex Value")
rbind(
rbind(
get_data(predictor="p_map", outcome="sig_1", lbound=0, ubound=0.5),
get_data(predictor="p_direction", outcome="sig_1", lbound=90, ubound=100),
get_data(predictor="rope", outcome="sig_1", lbound=0, ubound=20),
get_data(predictor="rope_full", outcome="sig_1", lbound=0, ubound=20),
get_data(predictor="p_rope", outcome="sig_1", lbound=0, ubound=100)
) %>%
rename("sig"=sig_1) %>%
mutate(threshold="p < .1"),
rbind(
get_data(predictor="p_map", outcome="sig_05", lbound=0, ubound=0.3),
get_data(predictor="p_direction", outcome="sig_05", lbound=95, ubound=100),
get_data(predictor="rope", outcome="sig_05", lbound=0, ubound=10),
get_data(predictor="rope_full", outcome="sig_05", lbound=0, ubound=10),
get_data(predictor="p_rope", outcome="sig_05", lbound=70, ubound=100)
) %>%
rename("sig"=sig_05) %>%
mutate(threshold="p < .05"),
rbind(
get_data(predictor="p_map", outcome="sig_01", lbound=0, ubound=0.1),
get_data(predictor="p_direction", outcome="sig_01", lbound=98, ubound=100),
get_data(predictor="rope", outcome="sig_01", lbound=0, ubound=2),
get_data(predictor="rope_full", outcome="sig_01", lbound=0, ubound=2),
get_data(predictor="p_rope", outcome="sig_01", lbound=90, ubound=100)
) %>%
rename("sig"=sig_01) %>%
mutate(threshold="p < .01"),
rbind(
get_data(predictor="p_map", outcome="sig_001", lbound=0, ubound=0.02),
get_data(predictor="p_direction", outcome="sig_001", lbound=99.5, ubound=100),
get_data(predictor="rope", outcome="sig_001", lbound=0, ubound=0.5),
get_data(predictor="rope_full", outcome="sig_001", lbound=0, ubound=0.5),
get_data(predictor="p_rope", outcome="sig_001", lbound=95, ubound=100)
) %>%
rename("sig"=sig_001) %>%
mutate(threshold="p < .001")
) %>%
mutate(index = as.factor(index)) %>%
ggplot(aes(x=value, y=sig)) +
geom_ribbon(aes(ymin=CI_lower, ymax=CI_upper), alpha=0.1) +
geom_line(aes(color=index), size=1) +
facet_grid(scales = "free", rows=threshold, cols=index) +
theme_classic() +
theme(strip.background = element_blank()) +
scale_color_manual(values = c("p_frequentist"="#607D8B", "p_map" = "#E91E63", "p_direction" = "#2196F3",
"rope" = "#FF9800", "rope_full" = "#FF5722", "p_rope"="#FFC107"), guide=FALSE) +
ylab("Probability of being significant\n") +
xlab("\nIndex Value")
rbind(
rbind(
get_data(predictor="p_map", outcome="sig_1", lbound=0, ubound=0.5),
get_data(predictor="p_direction", outcome="sig_1", lbound=90, ubound=100),
get_data(predictor="rope", outcome="sig_1", lbound=0, ubound=20),
get_data(predictor="rope_full", outcome="sig_1", lbound=0, ubound=20),
get_data(predictor="p_rope", outcome="sig_1", lbound=0, ubound=100)
) %>%
rename("sig"=sig_1) %>%
mutate(threshold="p < .1"),
rbind(
get_data(predictor="p_map", outcome="sig_05", lbound=0, ubound=0.3),
get_data(predictor="p_direction", outcome="sig_05", lbound=95, ubound=100),
get_data(predictor="rope", outcome="sig_05", lbound=0, ubound=10),
get_data(predictor="rope_full", outcome="sig_05", lbound=0, ubound=10),
get_data(predictor="p_rope", outcome="sig_05", lbound=70, ubound=100)
) %>%
rename("sig"=sig_05) %>%
mutate(threshold="p < .05"),
rbind(
get_data(predictor="p_map", outcome="sig_01", lbound=0, ubound=0.1),
get_data(predictor="p_direction", outcome="sig_01", lbound=98, ubound=100),
get_data(predictor="rope", outcome="sig_01", lbound=0, ubound=2),
get_data(predictor="rope_full", outcome="sig_01", lbound=0, ubound=2),
get_data(predictor="p_rope", outcome="sig_01", lbound=90, ubound=100)
) %>%
rename("sig"=sig_01) %>%
mutate(threshold="p < .01"),
rbind(
get_data(predictor="p_map", outcome="sig_001", lbound=0, ubound=0.02),
get_data(predictor="p_direction", outcome="sig_001", lbound=99.5, ubound=100),
get_data(predictor="rope", outcome="sig_001", lbound=0, ubound=0.5),
get_data(predictor="rope_full", outcome="sig_001", lbound=0, ubound=0.5),
get_data(predictor="p_rope", outcome="sig_001", lbound=95, ubound=100)
) %>%
rename("sig"=sig_001) %>%
mutate(threshold="p < .001")
) %>%
mutate(index = as.factor(index)) %>%
ggplot(aes(x=value, y=sig)) +
geom_ribbon(aes(ymin=CI_lower, ymax=CI_upper), alpha=0.1) +
geom_line(aes(color=index), size=1) +
facet_grid(scales = "free", rows="threshold", cols="index") +
theme_classic() +
theme(strip.background = element_blank()) +
scale_color_manual(values = c("p_frequentist"="#607D8B", "p_map" = "#E91E63", "p_direction" = "#2196F3",
"rope" = "#FF9800", "rope_full" = "#FF5722", "p_rope"="#FFC107"), guide=FALSE) +
ylab("Probability of being significant\n") +
xlab("\nIndex Value")
facet_grid(threshold ~ index, scales = "free" +
theme_classic() +
rbind(
rbind(
get_data(predictor="p_map", outcome="sig_1", lbound=0, ubound=0.5),
get_data(predictor="p_direction", outcome="sig_1", lbound=90, ubound=100),
get_data(predictor="rope", outcome="sig_1", lbound=0, ubound=20),
get_data(predictor="rope_full", outcome="sig_1", lbound=0, ubound=20),
get_data(predictor="p_rope", outcome="sig_1", lbound=0, ubound=100)
) %>%
rename("sig"=sig_1) %>%
mutate(threshold="p < .1"),
rbind(
get_data(predictor="p_map", outcome="sig_05", lbound=0, ubound=0.3),
get_data(predictor="p_direction", outcome="sig_05", lbound=95, ubound=100),
get_data(predictor="rope", outcome="sig_05", lbound=0, ubound=10),
get_data(predictor="rope_full", outcome="sig_05", lbound=0, ubound=10),
get_data(predictor="p_rope", outcome="sig_05", lbound=70, ubound=100)
) %>%
rename("sig"=sig_05) %>%
mutate(threshold="p < .05"),
rbind(
get_data(predictor="p_map", outcome="sig_01", lbound=0, ubound=0.1),
get_data(predictor="p_direction", outcome="sig_01", lbound=98, ubound=100),
get_data(predictor="rope", outcome="sig_01", lbound=0, ubound=2),
get_data(predictor="rope_full", outcome="sig_01", lbound=0, ubound=2),
get_data(predictor="p_rope", outcome="sig_01", lbound=90, ubound=100)
) %>%
rename("sig"=sig_01) %>%
mutate(threshold="p < .01"),
rbind(
get_data(predictor="p_map", outcome="sig_001", lbound=0, ubound=0.02),
get_data(predictor="p_direction", outcome="sig_001", lbound=99.5, ubound=100),
get_data(predictor="rope", outcome="sig_001", lbound=0, ubound=0.5),
get_data(predictor="rope_full", outcome="sig_001", lbound=0, ubound=0.5),
get_data(predictor="p_rope", outcome="sig_001", lbound=95, ubound=100)
) %>%
rename("sig"=sig_001) %>%
mutate(threshold="p < .001")
) %>%
mutate(index = as.factor(index)) %>%
ggplot(aes(x=value, y=sig)) +
geom_ribbon(aes(ymin=CI_lower, ymax=CI_upper), alpha=0.1) +
geom_line(aes(color=index), size=1) +
facet_grid(threshold ~ index, scales = "free") +
theme_classic() +
theme(strip.background = element_blank()) +
scale_color_manual(values = c("p_frequentist"="#607D8B", "p_map" = "#E91E63", "p_direction" = "#2196F3",
"rope" = "#FF9800", "rope_full" = "#FF5722", "p_rope"="#FFC107"), guide=FALSE) +
ylab("Probability of being significant\n") +
xlab("\nIndex Value")
rbind(
rbind(
get_data(predictor="p_map", outcome="sig_1", lbound=0, ubound=0.5),
get_data(predictor="p_direction", outcome="sig_1", lbound=90, ubound=100),
get_data(predictor="rope", outcome="sig_1", lbound=0, ubound=20),
get_data(predictor="rope_full", outcome="sig_1", lbound=0, ubound=20),
get_data(predictor="p_rope", outcome="sig_1", lbound=0, ubound=100)
) %>%
rename("sig"=sig_1) %>%
mutate(threshold="p < .1"),
rbind(
get_data(predictor="p_map", outcome="sig_05", lbound=0, ubound=0.3),
get_data(predictor="p_direction", outcome="sig_05", lbound=95, ubound=100),
get_data(predictor="rope", outcome="sig_05", lbound=0, ubound=10),
get_data(predictor="rope_full", outcome="sig_05", lbound=0, ubound=10),
get_data(predictor="p_rope", outcome="sig_05", lbound=70, ubound=100)
) %>%
rename("sig"=sig_05) %>%
mutate(threshold="p < .05"),
rbind(
get_data(predictor="p_map", outcome="sig_01", lbound=0, ubound=0.1),
get_data(predictor="p_direction", outcome="sig_01", lbound=98, ubound=100),
get_data(predictor="rope", outcome="sig_01", lbound=0, ubound=2),
get_data(predictor="rope_full", outcome="sig_01", lbound=0, ubound=2),
get_data(predictor="p_rope", outcome="sig_01", lbound=90, ubound=100)
) %>%
rename("sig"=sig_01) %>%
mutate(threshold="p < .01"),
rbind(
get_data(predictor="p_map", outcome="sig_001", lbound=0, ubound=0.02),
get_data(predictor="p_direction", outcome="sig_001", lbound=99.5, ubound=100),
get_data(predictor="rope", outcome="sig_001", lbound=0, ubound=0.5),
get_data(predictor="rope_full", outcome="sig_001", lbound=0, ubound=0.5),
get_data(predictor="p_rope", outcome="sig_001", lbound=95, ubound=100)
) %>%
rename("sig"=sig_001) %>%
mutate(threshold="p < .001")
) %>%
mutate(index = as.factor(index)) %>%
ggplot(aes(x=value, y=sig)) +
geom_ribbon(aes(ymin=CI_lower, ymax=CI_upper), alpha=0.1) +
geom_line(aes(color=index), size=1) +
facet_grid(index ~ threshold, scales = "free") +
theme_classic() +
theme(strip.background = element_blank()) +
scale_color_manual(values = c("p_frequentist"="#607D8B", "p_map" = "#E91E63", "p_direction" = "#2196F3",
"rope" = "#FF9800", "rope_full" = "#FF5722", "p_rope"="#FFC107"), guide=FALSE) +
ylab("Probability of being significant\n") +
xlab("\nIndex Value")
rbind(
rbind(
get_data(predictor="p_map", outcome="sig_1", lbound=0, ubound=0.5),
get_data(predictor="p_direction", outcome="sig_1", lbound=90, ubound=100),
get_data(predictor="rope", outcome="sig_1", lbound=0, ubound=20),
get_data(predictor="rope_full", outcome="sig_1", lbound=0, ubound=20),
get_data(predictor="p_rope", outcome="sig_1", lbound=0, ubound=100)
) %>%
rename("sig"=sig_1) %>%
mutate(threshold="p < .1"),
rbind(
get_data(predictor="p_map", outcome="sig_05", lbound=0, ubound=0.3),
get_data(predictor="p_direction", outcome="sig_05", lbound=95, ubound=100),
get_data(predictor="rope", outcome="sig_05", lbound=0, ubound=10),
get_data(predictor="rope_full", outcome="sig_05", lbound=0, ubound=10),
get_data(predictor="p_rope", outcome="sig_05", lbound=70, ubound=100)
) %>%
rename("sig"=sig_05) %>%
mutate(threshold="p < .05"),
rbind(
get_data(predictor="p_map", outcome="sig_01", lbound=0, ubound=0.1),
get_data(predictor="p_direction", outcome="sig_01", lbound=98, ubound=100),
get_data(predictor="rope", outcome="sig_01", lbound=0, ubound=2),
get_data(predictor="rope_full", outcome="sig_01", lbound=0, ubound=2),
get_data(predictor="p_rope", outcome="sig_01", lbound=90, ubound=100)
) %>%
rename("sig"=sig_01) %>%
mutate(threshold="p < .01"),
rbind(
get_data(predictor="p_map", outcome="sig_001", lbound=0, ubound=0.02),
get_data(predictor="p_direction", outcome="sig_001", lbound=99.5, ubound=100),
get_data(predictor="rope", outcome="sig_001", lbound=0, ubound=0.5),
get_data(predictor="rope_full", outcome="sig_001", lbound=0, ubound=0.5),
get_data(predictor="p_rope", outcome="sig_001", lbound=95, ubound=100)
) %>%
rename("sig"=sig_001) %>%
mutate(threshold="p < .001")
) %>%
mutate(index = as.factor(index)) %>%
ggplot(aes(x=value, y=sig)) +
geom_ribbon(aes(ymin=CI_lower, ymax=CI_upper), alpha=0.1) +
geom_line(aes(color=index), size=1) +
facet_wrap(index ~ threshold, scales = "free") +
theme_classic() +
theme(strip.background = element_blank()) +
scale_color_manual(values = c("p_frequentist"="#607D8B", "p_map" = "#E91E63", "p_direction" = "#2196F3",
"rope" = "#FF9800", "rope_full" = "#FF5722", "p_rope"="#FFC107"), guide=FALSE) +
ylab("Probability of being significant\n") +
xlab("\nIndex Value")
rbind(
rbind(
get_data(predictor="p_map", outcome="sig_1", lbound=0, ubound=0.5),
get_data(predictor="p_direction", outcome="sig_1", lbound=90, ubound=100),
get_data(predictor="rope", outcome="sig_1", lbound=0, ubound=20),
get_data(predictor="rope_full", outcome="sig_1", lbound=0, ubound=20),
get_data(predictor="p_rope", outcome="sig_1", lbound=0, ubound=100)
) %>%
rename("sig"=sig_1) %>%
mutate(threshold="p < .1"),
rbind(
get_data(predictor="p_map", outcome="sig_05", lbound=0, ubound=0.3),
get_data(predictor="p_direction", outcome="sig_05", lbound=95, ubound=100),
get_data(predictor="rope", outcome="sig_05", lbound=0, ubound=10),
get_data(predictor="rope_full", outcome="sig_05", lbound=0, ubound=10),
get_data(predictor="p_rope", outcome="sig_05", lbound=70, ubound=100)
) %>%
rename("sig"=sig_05) %>%
mutate(threshold="p < .05"),
rbind(
get_data(predictor="p_map", outcome="sig_01", lbound=0, ubound=0.1),
get_data(predictor="p_direction", outcome="sig_01", lbound=98, ubound=100),
get_data(predictor="rope", outcome="sig_01", lbound=0, ubound=2),
get_data(predictor="rope_full", outcome="sig_01", lbound=0, ubound=2),
get_data(predictor="p_rope", outcome="sig_01", lbound=90, ubound=100)
) %>%
rename("sig"=sig_01) %>%
mutate(threshold="p < .01"),
rbind(
get_data(predictor="p_map", outcome="sig_001", lbound=0, ubound=0.02),
get_data(predictor="p_direction", outcome="sig_001", lbound=99.5, ubound=100),
get_data(predictor="rope", outcome="sig_001", lbound=0, ubound=0.5),
get_data(predictor="rope_full", outcome="sig_001", lbound=0, ubound=0.5),
get_data(predictor="p_rope", outcome="sig_001", lbound=95, ubound=100)
) %>%
rename("sig"=sig_001) %>%
mutate(threshold="p < .001")
) %>%
mutate(index = as.factor(index)) %>%
ggplot(aes(x=value, y=sig)) +
geom_ribbon(aes(ymin=CI_lower, ymax=CI_upper), alpha=0.1) +
geom_line(aes(color=index), size=1) +
facet_wrap(~ index * threshold, scales = "free", rows=5) +
theme_classic() +
theme(strip.background = element_blank()) +
scale_color_manual(values = c("p_frequentist"="#607D8B", "p_map" = "#E91E63", "p_direction" = "#2196F3",
"rope" = "#FF9800", "rope_full" = "#FF5722", "p_rope"="#FFC107"), guide=FALSE) +
ylab("Probability of being significant\n") +
xlab("\nIndex Value")
rbind(
rbind(
get_data(predictor="p_map", outcome="sig_1", lbound=0, ubound=0.5),
get_data(predictor="p_direction", outcome="sig_1", lbound=90, ubound=100),
get_data(predictor="rope", outcome="sig_1", lbound=0, ubound=20),
get_data(predictor="rope_full", outcome="sig_1", lbound=0, ubound=20),
get_data(predictor="p_rope", outcome="sig_1", lbound=0, ubound=100)
) %>%
rename("sig"=sig_1) %>%
mutate(threshold="p < .1"),
rbind(
get_data(predictor="p_map", outcome="sig_05", lbound=0, ubound=0.3),
get_data(predictor="p_direction", outcome="sig_05", lbound=95, ubound=100),
get_data(predictor="rope", outcome="sig_05", lbound=0, ubound=10),
get_data(predictor="rope_full", outcome="sig_05", lbound=0, ubound=10),
get_data(predictor="p_rope", outcome="sig_05", lbound=70, ubound=100)
) %>%
rename("sig"=sig_05) %>%
mutate(threshold="p < .05"),
rbind(
get_data(predictor="p_map", outcome="sig_01", lbound=0, ubound=0.1),
get_data(predictor="p_direction", outcome="sig_01", lbound=98, ubound=100),
get_data(predictor="rope", outcome="sig_01", lbound=0, ubound=2),
get_data(predictor="rope_full", outcome="sig_01", lbound=0, ubound=2),
get_data(predictor="p_rope", outcome="sig_01", lbound=90, ubound=100)
) %>%
rename("sig"=sig_01) %>%
mutate(threshold="p < .01"),
rbind(
get_data(predictor="p_map", outcome="sig_001", lbound=0, ubound=0.02),
get_data(predictor="p_direction", outcome="sig_001", lbound=99.5, ubound=100),
get_data(predictor="rope", outcome="sig_001", lbound=0, ubound=0.5),
get_data(predictor="rope_full", outcome="sig_001", lbound=0, ubound=0.5),
get_data(predictor="p_rope", outcome="sig_001", lbound=95, ubound=100)
) %>%
rename("sig"=sig_001) %>%
mutate(threshold="p < .001")
) %>%
mutate(index = as.factor(index)) %>%
ggplot(aes(x=value, y=sig)) +
geom_ribbon(aes(ymin=CI_lower, ymax=CI_upper), alpha=0.1) +
geom_line(aes(color=index), size=1) +
facet_wrap(~ index * threshold, scales = "free", nrow=5) +
theme_classic() +
theme(strip.background = element_blank()) +
scale_color_manual(values = c("p_frequentist"="#607D8B", "p_map" = "#E91E63", "p_direction" = "#2196F3",
"rope" = "#FF9800", "rope_full" = "#FF5722", "p_rope"="#FFC107"), guide=FALSE) +
ylab("Probability of being significant\n") +
xlab("\nIndex Value")
pkgdown::build_site()
pkgdown::build_site()
pkgdown::build_site()
pkgdown::build_site()
pkgdown::build_site()
pkgdown::build_site()
library(bayestestR)
citation("bayestestR")
library(bayestestR)
library(bayestestR)
citation("bayestestR")
pkgdown::build_site()
install.packages("goodpractice")
goodpractice::gp()
spelling::spell_check_package()
spelling::spell_check_package()
library(bayestestR)
spelling::spell_check_package()
goodpractice::gp()
as.data.frame(density(rnorm_perfect(1000)))
testthat::expect_is(as.data.frame(density(rnorm_perfect(1000))),data.frame)
as.data.frame(density(rnorm_perfect(1000)))
class(as.data.frame(density(rnorm_perfect(1000))))
testthat::expect_is(as.data.frame(density(rnorm_perfect(1000))), "data.frame")
goodpractice::gp()

#' Maximum A Posteriori (MAP) Estimate
#'
#' Find the Highest Maximum A Posteriori (MAP) estimate of a posterior. It corresponds to the 'peak' of the posterior distribution.
#'
#' @param posterior Vector representing a posterior distribution. Can also be a `stanreg` or `brmsfit` model.
#' @param precision Number of points for density estimation. See the `n` parameter in \link[=density]{density}.
#'
#' @return The x, y coordinates of the MAP, corresponding to the MAP (x) and its density (y).
#' @examples
#' library(bayestestR)
#'
#' posterior <- rnorm(1000)
#' map_estimate(posterior)
#'
#' \dontrun{
#' library(rstanarm)
#' model <- rstanarm::stan_glm(mpg ~ wt + cyl, data = mtcars)
#' map_estimate(model)
#'
#' library(brms)
#' model <- brms::brm(mpg ~ wt + cyl, data = mtcars)
#' map_estimate(model)
#' }
#' @author \href{https://dominiquemakowski.github.io/}{Dominique Makowski}
#' @importFrom stats density
#' @export
map_estimate <- function(posterior, precision = 2^10) {
  UseMethod("map_estimate")
}


#' @export
map_estimate.numeric <- function(posterior, precision = 2^10) {
  d <- density(posterior, n = precision)

  hdp_x <- d$x[which.max(d$y)]
  hdp_y <- max(d$y)
  return(c(hdp_x, hdp_y))
}


#' @export
map_estimate.stanreg <- function(posterior, precision = 2^10) {
  return(sapply(as.data.frame(posterior), map_estimate, precision=precision, simplify = FALSE))
}

#' @export
map_estimate.brmsfit <- function(posterior, precision = 2^10) {
  return(sapply(as.data.frame(posterior), map_estimate, precision=precision, simplify = FALSE))
}